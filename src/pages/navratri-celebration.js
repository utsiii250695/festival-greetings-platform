import { useState, useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';

export default function NavratriCelebration() {
  const router = useRouter();
  const [selectedDay, setSelectedDay] = useState(null);
  const [currentLang, setCurrentLang] = useState('en');

  // Initialize language from URL params
  useEffect(() => {
    const urlLang = router.query.lang;
    if (urlLang && ['en', 'hi', 'gu'].includes(urlLang)) {
      setCurrentLang(urlLang);
    }
  }, [router.query.lang]);

  const languages = [
    { code: 'en', name: 'English', nativeName: 'English' },
    { code: 'hi', name: 'Hindi', nativeName: 'рд╣рд┐рдВрджреА' },
    { code: 'gu', name: 'Gujarati', nativeName: 'ркЧрлБркЬрк░рк╛ркдрлА' }
  ];

  const translations = {
    en: {
      title: "Navratri Celebration",
      subtitle: "Nine Sacred Days, Nine Divine Forms",
      introduction: {
        title: "The Sacred Journey of Nine Nights",
        description: "Each day of Navratri honors a unique form of Goddess Durga, representing different aspects of divine feminine energy. Click on any day below to explore its spiritual significance, stories, and celebrations."
      },
      day: "Day",
      color: "Color",
      comingSoon: "Coming Soon",
      exploreDay1: "Explore Day 1 Stories",
      exploreDay2: "Explore Day 2 Stories",
      exploreDay3: "Explore Day 3 Stories",
      exploreDay4: "Explore Day 4 Stories",
      spiritualFramework: "The Spiritual Framework of Navratri",
      days13: "Days 1-3: Durga",
      days46: "Days 4-6: Lakshmi",
      days79: "Days 7-9: Saraswati",
      destructionNegativity: "Destruction of Negativity",
      abundanceProsperity: "Abundance & Prosperity",
      wisdomKnowledge: "Wisdom & Knowledge",
      days13Desc: "The first three days honor the fierce aspect that destroys ignorance, ego, and negative tendencies within us.",
      days46Desc: "The middle three days invoke prosperity, not just material wealth, but richness of spirit and heart.",
      days79Desc: "The final three days celebrate divine knowledge, wisdom, and the purity of consciousness.",
      vijayadashami: "The 10th day, Vijayadashami, celebrates the victory of good over evil and the culmination of our spiritual journey.",
      back: "Back"
    },
    hi: {
      title: "рдирд╡рд░рд╛рддреНрд░рд┐ рдЙрддреНрд╕рд╡",
      subtitle: "рдиреМ рдкрд╡рд┐рддреНрд░ рд░рд╛рддреЗрдВ, рдиреМ рджрд┐рд╡реНрдп рд░реВрдк",
      introduction: {
        title: "рдиреМ рд░рд╛рддреЛрдВ рдХреА рдкрд╡рд┐рддреНрд░ рдпрд╛рддреНрд░рд╛",
        description: "рдирд╡рд░рд╛рддреНрд░рд┐ рдХрд╛ рдкреНрд░рддреНрдпреЗрдХ рджрд┐рди рджреЗрд╡реА рджреБрд░реНрдЧрд╛ рдХреЗ рдПрдХ рдЕрдиреВрдареЗ рд░реВрдк рдХреЛ рд╕рдорд░реНрдкрд┐рдд рд╣реИ, рдЬреЛ рджрд┐рд╡реНрдп рд╕реНрддреНрд░реА рд╢рдХреНрддрд┐ рдХреЗ рд╡рд┐рднрд┐рдиреНрди рдкрд╣рд▓реБрдУрдВ рдХрд╛ рдкреНрд░рддрд┐рдирд┐рдзрд┐рддреНрд╡ рдХрд░рддрд╛ рд╣реИред рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рдХрд┐рд╕реА рднреА рджрд┐рди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдФрд░ рдЙрд╕рдХреА рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╣рддреНрддрд╛, рдХрд╣рд╛рдирд┐рдпреЛрдВ рдФрд░ рдЙрддреНрд╕рд╡реЛрдВ рдХреЛ рдЬрд╛рдиреЗрдВред"
      },
      day: "рджрд┐рди",
      color: "рд░рдВрдЧ",
      comingSoon: "рдЬрд▓реНрдж рдЖ рд░рд╣рд╛ рд╣реИ",
      exploreDay1: "рджрд┐рди 1 рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рдЬрд╛рдиреЗрдВ",
      exploreDay2: "рджрд┐рди 2 рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рдЬрд╛рдиреЗрдВ",
      exploreDay3: "рджрд┐рди 3 рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рдЬрд╛рдиреЗрдВ",
      exploreDay4: "рджрд┐рди 4 рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ рдЬрд╛рдиреЗрдВ",
      spiritualFramework: "рдирд╡рд░рд╛рддреНрд░рд┐ рдХреА рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕рдВрд░рдЪрдирд╛",
      days13: "рджрд┐рди 1-3: рджреБрд░реНрдЧрд╛",
      days46: "рджрд┐рди 4-6: рд▓рдХреНрд╖реНрдореА",
      days79: "рджрд┐рди 7-9: рд╕рд░рд╕реНрд╡рддреА",
      destructionNegativity: "рдирдХрд╛рд░рд╛рддреНрдордХрддрд╛ рдХрд╛ рдирд╛рд╢",
      abundanceProsperity: "рд╕рдореГрджреНрдзрд┐ рдФрд░ рдЦреБрд╢рд╣рд╛рд▓реА",
      wisdomKnowledge: "рдЬреНрдЮрд╛рди рдФрд░ рдмреБрджреНрдзрд┐",
      days13Desc: "рдкрд╣рд▓реЗ рддреАрди рджрд┐рди рдЙрд╕ рдЙрдЧреНрд░ рд░реВрдк рдХреА рдкреВрдЬрд╛ рдХрд░рддреЗ рд╣реИрдВ рдЬреЛ рд╣рдорд╛рд░реЗ рднреАрддрд░ рдЕрдЬреНрдЮрд╛рдирддрд╛, рдЕрд╣рдВрдХрд╛рд░ рдФрд░ рдирдХрд╛рд░рд╛рддреНрдордХ рдкреНрд░рд╡реГрддреНрддрд┐рдпреЛрдВ рдХреЛ рдирд╖реНрдЯ рдХрд░рддрд╛ рд╣реИред",
      days46Desc: "рдмреАрдЪ рдХреЗ рддреАрди рджрд┐рди рд╕рдореГрджреНрдзрд┐ рдХрд╛ рдЖрд╣реНрд╡рд╛рди рдХрд░рддреЗ рд╣реИрдВ, рди рдХреЗрд╡рд▓ рднреМрддрд┐рдХ рдзрди рдмрд▓реНрдХрд┐ рдЖрддреНрдорд╛ рдФрд░ рд╣реГрджрдп рдХреА рд╕рдВрдкрдиреНрдирддрд╛ред",
      days79Desc: "рдЕрдВрддрд┐рдо рддреАрди рджрд┐рди рджрд┐рд╡реНрдп рдЬреНрдЮрд╛рди, рдмреБрджреНрдзрд┐ рдФрд░ рдЪреЗрддрдирд╛ рдХреА рдкрд╡рд┐рддреНрд░рддрд╛ рдХрд╛ рдЙрддреНрд╕рд╡ рдордирд╛рддреЗ рд╣реИрдВред",
      vijayadashami: "10рд╡рд╛рдВ рджрд┐рди, рд╡рд┐рдЬрдпрджрд╢рдореА, рдмреБрд░рд╛рдИ рдкрд░ рдЕрдЪреНрдЫрд╛рдИ рдХреА рдЬреАрдд рдФрд░ рд╣рдорд╛рд░реА рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдпрд╛рддреНрд░рд╛ рдХреА рдкрд░рд┐рдгрддрд┐ рдХрд╛ рдЙрддреНрд╕рд╡ рдордирд╛рддрд╛ рд╣реИред",
      back: "рд╡рд╛рдкрд╕"
    },
    gu: {
      title: "ркирк╡рк░рк╛ркдрлНрк░рлА ркЙркдрлНрк╕рк╡",
      subtitle: "ркирк╡ рккрк╡рк┐ркдрлНрк░ рк░рк╛ркдрлНрк░рк┐ркУ, ркирк╡ ркжрк┐рк╡рлНркп рк╕рлНрк╡рк░рлВрккрлЛ",
      introduction: {
        title: "ркирк╡ рк░рк╛ркдрлНрк░рк┐ркУркирлА рккрк╡рк┐ркдрлНрк░ ркпрк╛ркдрлНрк░рк╛",
        description: "ркирк╡рк░рк╛ркдрлНрк░рлАркирлЛ ркжрк░рлЗркХ ркжрк┐рк╡рк╕ ркорк╛ркдрк╛ ркжрлБрк░рлНркЧрк╛ркирк╛ ркПркХ ркЕркирлЛркЦрк╛ рк░рлВрккркирлЗ рк╕ркорк░рлНрккрк┐ркд ркЫрлЗ, ркЬрлЗ ркжрк┐рк╡рлНркп рк╕рлНркдрлНрк░рлА рк╢ркХрлНркдрк┐ркирк╛ рк╡рк┐рк╡рк┐ркз рккрк╛рк╕рк╛ркУркирлБркВ рккрлНрк░ркдрк┐ркирк┐ркзрк┐ркдрлНрк╡ ркХрк░рлЗ ркЫрлЗ. ркирлАркЪрлЗ ркЖрккрлЗрк▓рк╛ ркХрлЛркИрккркг ркжрк┐рк╡рк╕ рккрк░ ркХрлНрк▓рк┐ркХ ркХрк░рлЛ ркЕркирлЗ ркдрлЗркирлА ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ ркорк╣ркдрлНркдрк╛, рк╡рк╛рк░рлНркдрк╛ркУ ркЕркирлЗ ркЙркдрлНрк╕рк╡рлЛркирлЗ ркЬрк╛ркгрлЛред"
      },
      day: "ркжрк┐рк╡рк╕",
      color: "рк░ркВркЧ",
      comingSoon: "ркЯрлВркВркХ рк╕ркоркпркорк╛ркВ ркЖрк╡рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ",
      exploreDay1: "ркжрк┐рк╡рк╕ 1ркирлА рк╡рк╛рк░рлНркдрк╛ркУ ркЬрк╛ркгрлЛ",
      exploreDay2: "ркжрк┐рк╡рк╕ 2ркирлА рк╡рк╛рк░рлНркдрк╛ркУ ркЬрк╛ркгрлЛ",
      exploreDay3: "ркжрк┐рк╡рк╕ 3ркирлА рк╡рк╛рк░рлНркдрк╛ркУ ркЬрк╛ркгрлЛ",
      exploreDay4: "ркжрк┐рк╡рк╕ 4ркирлА рк╡рк╛рк░рлНркдрк╛ркУ ркЬрк╛ркгрлЛ",
      spiritualFramework: "ркирк╡рк░рк╛ркдрлНрк░рлАркирлА ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ рк░ркЪркирк╛",
      days13: "ркжрк┐рк╡рк╕ 1-3: ркжрлБрк░рлНркЧрк╛",
      days46: "ркжрк┐рк╡рк╕ 4-6: рк▓ркХрлНрк╖рлНркорлА",
      days79: "ркжрк┐рк╡рк╕ 7-9: рк╕рк░рк╕рлНрк╡ркдрлА",
      destructionNegativity: "ркиркХрк╛рк░рк╛ркдрлНркоркХркдрк╛ркирлЛ ркирк╛рк╢",
      abundanceProsperity: "рк╕ркорлГркжрлНркзрк┐ ркЕркирлЗ ркЦрлБрк╢рк╣рк╛рк▓рлА",
      wisdomKnowledge: "ркЬрлНркЮрк╛рки ркЕркирлЗ ркмрлБркжрлНркзрк┐",
      days13Desc: "рккрк╣рлЗрк▓рк╛ ркдрлНрк░ркг ркжрк┐рк╡рк╕рлЛ ркдрлЗ ркХрлНрк░рлЛркзрлА рк╕рлНрк╡рк░рлВрккркирлА рккрлВркЬрк╛ ркХрк░рлЗ ркЫрлЗ ркЬрлЗ ркЖрккркгрк╛ркирлА ркЕркВркжрк░ркирлА ркЕркЬрлНркЮрк╛ркиркдрк╛, ркЕрк╣ркВркХрк╛рк░ ркЕркирлЗ ркиркХрк╛рк░рк╛ркдрлНркоркХ рк╡рлГркдрлНркдрк┐ркУркирлЛ ркирк╛рк╢ ркХрк░рлЗ ркЫрлЗ.",
      days46Desc: "ркоркзрлНркпркирк╛ ркдрлНрк░ркг ркжрк┐рк╡рк╕рлЛ рк╕ркорлГркжрлНркзрк┐ркирлБркВ ркЖрк╣рлНрк╡рк╛рки ркХрк░рлЗ ркЫрлЗ, ркорк╛ркдрлНрк░ ркнрлМркдрк┐ркХ рк╕ркВрккркдрлНркдрк┐ ркирк╣рлАркВ рккрк░ркВркдрлБ ркЖркдрлНркорк╛ ркЕркирлЗ рк╣рлГркжркпркирлА рк╕ркВрккркирлНркиркдрк╛.",
      days79Desc: "ркЕркВркдрк┐рко ркдрлНрк░ркг ркжрк┐рк╡рк╕рлЛ ркжрк┐рк╡рлНркп ркЬрлНркЮрк╛рки, ркмрлБркжрлНркзрк┐ ркЕркирлЗ ркЪрлЗркдркирк╛ркирлА рккрк╡рк┐ркдрлНрк░ркдрк╛ркирлЛ ркЙркдрлНрк╕рк╡ ркоркирк╛рк╡рлЗ ркЫрлЗ.",
      vijayadashami: "10ркорлЛ ркжрк┐рк╡рк╕, рк╡рк┐ркЬркпрк╛ркжрк╢ркорлА, ркЕрк╢рлБркн рккрк░ рк╢рлБркнркирлА ркЬрлАркд ркЕркирлЗ ркЖрккркгрлА ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ ркпрк╛ркдрлНрк░рк╛ркирлА рккрк░рк╛ркХрк╛рк╖рлНркарк╛ркирлЛ ркЙркдрлНрк╕рк╡ ркоркирк╛рк╡рлЗ ркЫрлЗ.",
      back: "рккрк╛ркЫрк╛"
    }
  };

  const navratriDays = {
    en: [
      {
        day: 1, goddess: 'Shailaputri', color: 'White', meaning: 'Daughter of Mountains',
        qualities: ['Purity', 'Strength', 'New Beginnings'], emoji: 'ЁЯПФя╕П', bgGradient: 'from-gray-100 to-white'
      },
      {
        day: 2, goddess: 'Brahmacharini', color: 'Red', meaning: 'Devoted to Brahma',
        qualities: ['Wisdom', 'Penance', 'Spiritual Practice'], emoji: 'ЁЯзШтАНтЩАя╕П', bgGradient: 'from-red-100 to-pink-100'
      },
      {
        day: 3, goddess: 'Chandraghanta', color: 'Royal Blue', meaning: 'Bell-shaped Moon',
        qualities: ['Courage', 'Protection', 'Harmony'], emoji: 'ЁЯМЩ', bgGradient: 'from-blue-100 to-indigo-100'
      },
      {
        day: 4, goddess: 'Kushmanda', color: 'Yellow', meaning: 'Creator of Universe',
        qualities: ['Joy', 'Health', 'Prosperity'], emoji: 'тШАя╕П', bgGradient: 'from-yellow-100 to-amber-100'
      },
      {
        day: 5, goddess: 'Skandamata', color: 'Green', meaning: 'Mother of Skanda',
        qualities: ['Wisdom', 'Fertility', 'Nourishment'], emoji: 'ЁЯМ┐', bgGradient: 'from-green-100 to-emerald-100'
      },
      {
        day: 6, goddess: 'Katyayani', color: 'Grey', meaning: 'Fierce Warrior',
        qualities: ['Strength', 'Balance', 'Fearlessness'], emoji: 'тЪФя╕П', bgGradient: 'from-gray-100 to-slate-100'
      },
      {
        day: 7, goddess: 'Kalaratri', color: 'Orange', meaning: 'Night of Destruction',
        qualities: ['Destruction of Evil', 'Transformation', 'Protection'], emoji: 'ЁЯФе', bgGradient: 'from-orange-100 to-red-100'
      },
      {
        day: 8, goddess: 'Mahagauri', color: 'Peacock Green', meaning: 'Extremely Fair',
        qualities: ['Forgiveness', 'Peace', 'Purity'], emoji: 'ЁЯк╢', bgGradient: 'from-teal-100 to-cyan-100'
      },
      {
        day: 9, goddess: 'Siddhidatri', color: 'Pink', meaning: 'Giver of Perfection',
        qualities: ['Wisdom', 'Fulfillment', 'Compassion'], emoji: 'ЁЯМ╕', bgGradient: 'from-pink-100 to-rose-100'
      }
    ],
    hi: [
      {
        day: 1, goddess: 'рд╢реИрд▓рдкреБрддреНрд░реА', color: 'рд╕рдлреЗрдж', meaning: 'рдкрд░реНрд╡рддреЛрдВ рдХреА рдкреБрддреНрд░реА',
        qualities: ['рдкрд╡рд┐рддреНрд░рддрд╛', 'рд╢рдХреНрддрд┐', 'рдирдИ рд╢реБрд░реБрдЖрдд'], emoji: 'ЁЯПФя╕П', bgGradient: 'from-gray-100 to-white'
      },
      {
        day: 2, goddess: 'рдмреНрд░рд╣реНрдордЪрд╛рд░рд┐рдгреА', color: 'рд▓рд╛рд▓', meaning: 'рдмреНрд░рд╣реНрдо рдХреА рднрдХреНрдд',
        qualities: ['рдЬреНрдЮрд╛рди', 'рддрдкрд╕реНрдпрд╛', 'рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕рд╛рдзрдирд╛'], emoji: 'ЁЯзШтАНтЩАя╕П', bgGradient: 'from-red-100 to-pink-100'
      },
      {
        day: 3, goddess: 'рдЪрдВрджреНрд░рдШрдВрдЯрд╛', color: 'рдиреАрд▓рд╛', meaning: 'рдШрдВрдЯреЗ рдХреЗ рдЖрдХрд╛рд░ рдХрд╛ рдЪрд╛рдВрдж',
        qualities: ['рд╕рд╛рд╣рд╕', 'рд╕реБрд░рдХреНрд╖рд╛', 'рд╕рд╛рдордВрдЬрд╕реНрдп'], emoji: 'ЁЯМЩ', bgGradient: 'from-blue-100 to-indigo-100'
      },
      {
        day: 4, goddess: 'рдХреВрд╖реНрдорд╛рдВрдбрд╛', color: 'рдкреАрд▓рд╛', meaning: 'рдмреНрд░рд╣реНрдорд╛рдВрдб рдХреА рд░рдЪрдпрд┐рддрд╛',
        qualities: ['рдЖрдирдВрдж', 'рд╕реНрд╡рд╛рд╕реНрдереНрдп', 'рд╕рдореГрджреНрдзрд┐'], emoji: 'тШАя╕П', bgGradient: 'from-yellow-100 to-amber-100'
      },
      {
        day: 5, goddess: 'рд╕реНрдХрдВрджрдорд╛рддрд╛', color: 'рд╣рд░рд╛', meaning: 'рд╕реНрдХрдВрдж рдХреА рдорд╛рддрд╛',
        qualities: ['рдЬреНрдЮрд╛рди', 'рдкреНрд░рдЬрдирди', 'рдкреЛрд╖рдг'], emoji: 'ЁЯМ┐', bgGradient: 'from-green-100 to-emerald-100'
      },
      {
        day: 6, goddess: 'рдХрд╛рддреНрдпрд╛рдпрдиреА', color: 'рдзреВрд╕рд░', meaning: 'рд╡реАрд░ рдпреЛрджреНрдзрд╛',
        qualities: ['рд╢рдХреНрддрд┐', 'рд╕рдВрддреБрд▓рди', 'рдирд┐рдбрд░рддрд╛'], emoji: 'тЪФя╕П', bgGradient: 'from-gray-100 to-slate-100'
      },
      {
        day: 7, goddess: 'рдХрд╛рд▓рд░рд╛рддреНрд░рд┐', color: 'рдирд╛рд░рдВрдЧреА', meaning: 'рд╡рд┐рдирд╛рд╢ рдХреА рд░рд╛рддреНрд░рд┐',
        qualities: ['рдмреБрд░рд╛рдИ рдХрд╛ рдирд╛рд╢', 'рдкрд░рд┐рд╡рд░реНрддрди', 'рд╕реБрд░рдХреНрд╖рд╛'], emoji: 'ЁЯФе', bgGradient: 'from-orange-100 to-red-100'
      },
      {
        day: 8, goddess: 'рдорд╣рд╛рдЧреМрд░реА', color: 'рдореЛрд░ рд╣рд░рд╛', meaning: 'рдЕрддреНрдпрдВрдд рдЧреЛрд░реА',
        qualities: ['рдХреНрд╖рдорд╛', 'рд╢рд╛рдВрддрд┐', 'рдкрд╡рд┐рддреНрд░рддрд╛'], emoji: 'ЁЯк╢', bgGradient: 'from-teal-100 to-cyan-100'
      },
      {
        day: 9, goddess: 'рд╕рд┐рджреНрдзрд┐рджрд╛рддреНрд░реА', color: 'рдЧреБрд▓рд╛рдмреА', meaning: 'рд╕рд┐рджреНрдзрд┐ рдкреНрд░рджрд╛рди рдХрд░рдиреЗ рд╡рд╛рд▓реА',
        qualities: ['рдЬреНрдЮрд╛рди', 'рдкреВрд░реНрдгрддрд╛', 'рдХрд░реБрдгрд╛'], emoji: 'ЁЯМ╕', bgGradient: 'from-pink-100 to-rose-100'
      }
    ],
    gu: [
      {
        day: 1, goddess: 'рк╢рлИрк▓рккрлБркдрлНрк░рлА', color: 'рк╕рклрлЗркж', meaning: 'рккрк░рлНрк╡ркдрлЛркирлА рккрлБркдрлНрк░рлА',
        qualities: ['рккрк╡рк┐ркдрлНрк░ркдрк╛', 'рк╢ркХрлНркдрк┐', 'ркирк╡рлА рк╢рк░рлВркЖркд'], emoji: 'ЁЯПФя╕П', bgGradient: 'from-gray-100 to-white'
      },
      {
        day: 2, goddess: 'ркмрлНрк░рк╣рлНркоркЪрк╛рк░рк┐ркгрлА', color: 'рк▓рк╛рк▓', meaning: 'ркмрлНрк░рк╣рлНркорк╛ркирлА ркнркХрлНркд',
        qualities: ['ркЬрлНркЮрк╛рки', 'ркдрккрк╕рлНркпрк╛', 'ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ рк╕рк╛ркзркирк╛'], emoji: 'ЁЯзШтАНтЩАя╕П', bgGradient: 'from-red-100 to-pink-100'
      },
      {
        day: 3, goddess: 'ркЪркВркжрлНрк░ркШркВркЯрк╛', color: 'ркирлАрк▓рлЛ', meaning: 'ркШркВркЯркбрлАркирк╛ ркЖркХрк╛рк░ркирлЛ ркЪркВркжрлНрк░',
        qualities: ['рк╣рк┐ркВркоркд', 'рк╕рлБрк░ркХрлНрк╖рк╛', 'рк╕рк╛ркоркВркЬрк╕рлНркп'], emoji: 'ЁЯМЩ', bgGradient: 'from-blue-100 to-indigo-100'
      },
      {
        day: 4, goddess: 'ркХрлБрк╖рлНркорк╛ркВркбрк╛', color: 'рккрлАрк│рлЛ', meaning: 'ркмрлНрк░рк╣рлНркорк╛ркВркбркирлА рк░ркЪркирк╛ркХрк╛рк░',
        qualities: ['ркЖркиркВркж', 'ркЖрк░рлЛркЧрлНркп', 'рк╕ркорлГркжрлНркзрк┐'], emoji: 'тШАя╕П', bgGradient: 'from-yellow-100 to-amber-100'
      },
      {
        day: 5, goddess: 'рк╕рлНркХркВркжркорк╛ркдрк╛', color: 'рк▓рлАрк▓рлЛ', meaning: 'рк╕рлНркХркВркжркирлА ркорк╛ркдрк╛',
        qualities: ['ркЬрлНркЮрк╛рки', 'рклрк│ркжрлНрк░рлБрккркдрк╛', 'рккрлЛрк╖ркг'], emoji: 'ЁЯМ┐', bgGradient: 'from-green-100 to-emerald-100'
      },
      {
        day: 6, goddess: 'ркХрк╛ркдрлНркпрк╛ркпркирлА', color: 'ркзрлВрк╕рк░', meaning: 'рк╡рлАрк░ ркпрлЛркжрлНркзрк╛',
        qualities: ['рк╢ркХрлНркдрк┐', 'рк╕ркВркдрлБрк▓рки', 'ркирк┐рк░рлНркнркпркдрк╛'], emoji: 'тЪФя╕П', bgGradient: 'from-gray-100 to-slate-100'
      },
      {
        day: 7, goddess: 'ркХрк╛рк▓рк░рк╛ркдрлНрк░рк┐', color: 'ркирк╛рк░ркВркЧрлА', meaning: 'рк╡рк┐ркирк╛рк╢ркирлА рк░рк╛ркдрлНрк░рк┐',
        qualities: ['ркЕрк╢рлБркнркирлЛ ркирк╛рк╢', 'рккрк░рк┐рк╡рк░рлНркдрки', 'рк╕рлБрк░ркХрлНрк╖рк╛'], emoji: 'ЁЯФе', bgGradient: 'from-orange-100 to-red-100'
      },
      {
        day: 8, goddess: 'ркорк╣рк╛ркЧрлМрк░рлА', color: 'ркорлЛрк░ рк▓рлАрк▓рлЛ', meaning: 'ркЕркдрлНркпркВркд ркЧрлЛрк░рлА',
        qualities: ['ркХрлНрк╖ркорк╛', 'рк╢рк╛ркВркдрк┐', 'рккрк╡рк┐ркдрлНрк░ркдрк╛'], emoji: 'ЁЯк╢', bgGradient: 'from-teal-100 to-cyan-100'
      },
      {
        day: 9, goddess: 'рк╕рк┐ркжрлНркзрк┐ркжрк╛ркдрлНрк░рлА', color: 'ркЧрлБрк▓рк╛ркмрлА', meaning: 'рк╕рк┐ркжрлНркзрк┐ ркЖрккркирк╛рк░',
        qualities: ['ркЬрлНркЮрк╛рки', 'рккрлВрк░рлНркгркдрк╛', 'ркХрк░рлБркгрк╛'], emoji: 'ЁЯМ╕', bgGradient: 'from-pink-100 to-rose-100'
      }
    ]
  };

  const t = translations[currentLang];
  const days = navratriDays[currentLang];

  const handleDayClick = (day) => {
    if (day === 1) {
      router.push(`/navratri-day-1?lang=${currentLang}`);
    } else if (day === 2) {
      router.push(`/navratri-day-2?lang=${currentLang}`);
    } else if (day === 3) {
      router.push(`/navratri-day-3?lang=${currentLang}`);
    } else if (day === 4) {
      router.push(`/navratri-day-4?lang=${currentLang}`);
    } else {
      // For now, only Days 1-4 are implemented
      alert(`${t.day} ${day} content coming soon! ЁЯЩП`);
    }
  };

  return (
    <>
      <Head>
        <title>{t.title} - 9 Sacred Days Journey</title>
        <meta name="description" content={t.introduction.description} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
        {/* Header */}
        <div className="bg-white shadow-lg border-b-4 border-gradient-to-r from-purple-500 to-pink-500">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6">
            {/* Mobile Header */}
            <div className="lg:hidden">
              <div className="flex items-center justify-between mb-4">
                <button
                  onClick={() => window.close()}
                  className="flex items-center px-3 py-2 bg-purple-50 text-purple-700 rounded-lg hover:bg-purple-100 transition-all duration-200 border border-purple-200 text-sm"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                  </svg>
                  {t.back}
                </button>

                {/* Language Selector */}
                <div className="relative">
                  <select
                    value={currentLang}
                    onChange={(e) => {
                      setCurrentLang(e.target.value);
                      const newQuery = { ...router.query, lang: e.target.value };
                      router.push({ pathname: router.pathname, query: newQuery }, undefined, { shallow: true });
                    }}
                    className="appearance-none bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 text-purple-700 px-3 py-2 pr-8 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 font-medium text-sm"
                  >
                    {languages.map((lang) => (
                      <option key={lang.code} value={lang.code}>
                        {lang.nativeName}
                      </option>
                    ))}
                  </select>
                  <svg className="absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-purple-600 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </div>

              <div className="text-center">
                <h1 className="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                  ЁЯОн {t.title} ЁЯОн
                </h1>
                <p className="text-gray-600 mt-2 text-sm sm:text-base">{t.subtitle}</p>
              </div>
            </div>

            {/* Desktop Header */}
            <div className="hidden lg:flex items-center justify-between">
              {/* Left side - Back button and Language selector */}
              <div className="flex items-center space-x-4">
                <button
                  onClick={() => window.close()}
                  className="flex items-center px-4 py-2 bg-purple-50 text-purple-700 rounded-lg hover:bg-purple-100 transition-all duration-200 border border-purple-200"
                >
                  <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                  </svg>
                  {t.back}
                </button>

                {/* Language Selector */}
                <div className="relative">
                  <select
                    value={currentLang}
                    onChange={(e) => {
                      setCurrentLang(e.target.value);
                      // Update URL params
                      const newQuery = { ...router.query, lang: e.target.value };
                      router.push({ pathname: router.pathname, query: newQuery }, undefined, { shallow: true });
                    }}
                    className="appearance-none bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 text-purple-700 px-4 py-2 pr-8 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 font-medium"
                  >
                    {languages.map((lang) => (
                      <option key={lang.code} value={lang.code}>
                        {lang.nativeName}
                      </option>
                    ))}
                  </select>
                  <svg className="absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-purple-600 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </div>

              <div className="text-center">
                <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                  ЁЯОн {t.title} ЁЯОн
                </h1>
                <p className="text-gray-600 mt-2 text-lg">{t.subtitle}</p>
              </div>

              <div className="w-32"></div> {/* Spacer for center alignment */}
            </div>
          </div>
        </div>

        {/* Main Content */}
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8 lg:py-12">
          {/* Introduction */}
          <div className="text-center mb-8 sm:mb-12">
            <div className="inline-block p-4 sm:p-6 bg-white rounded-2xl shadow-lg border border-purple-200 mb-6 sm:mb-8 mx-auto max-w-4xl">
              <h2 className="text-xl sm:text-2xl font-bold text-gray-800 mb-3 sm:mb-4">
                тЬи {t.introduction.title} тЬи
              </h2>
              <p className="text-gray-600 text-sm sm:text-base lg:text-lg max-w-3xl mx-auto leading-relaxed">
                {t.introduction.description}
              </p>
            </div>
          </div>

          {/* 9 Days Grid */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8 sm:mb-12">
            {days.map((dayInfo) => (
              <div
                key={dayInfo.day}
                onClick={() => handleDayClick(dayInfo.day)}
                className={`bg-gradient-to-br ${dayInfo.bgGradient} p-4 sm:p-6 rounded-2xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 cursor-pointer border-2 border-transparent hover:border-purple-300 group`}
              >
                <div className="text-center">
                  {/* Day Number & Emoji */}
                  <div className="flex items-center justify-center mb-3 sm:mb-4">
                    <div className="text-4xl sm:text-5xl lg:text-6xl mr-2">{dayInfo.emoji}</div>
                    <div className="text-2xl sm:text-3xl lg:text-4xl font-bold text-purple-700">
                      {t.day} {dayInfo.day}
                    </div>
                  </div>

                  {/* Goddess Name */}
                  <h3 className="text-lg sm:text-xl lg:text-2xl font-bold text-gray-800 mb-2">
                    {currentLang === 'en' ? 'Maa ' : ''}{dayInfo.goddess}
                  </h3>

                  {/* Meaning */}
                  <p className="text-sm sm:text-base text-gray-600 italic mb-3">
                    "{dayInfo.meaning}"
                  </p>

                  {/* Color */}
                  <div className="mb-3 sm:mb-4">
                    <span className="inline-block px-2 sm:px-3 py-1 bg-white bg-opacity-70 rounded-full text-xs sm:text-sm font-semibold text-gray-700">
                      {t.color}: {dayInfo.color}
                    </span>
                  </div>

                  {/* Qualities */}
                  <div className="flex flex-wrap justify-center gap-1 sm:gap-2 mb-3 sm:mb-4">
                    {dayInfo.qualities.map((quality, index) => (
                      <span
                        key={index}
                        className="px-2 sm:px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-xs font-medium"
                      >
                        {quality}
                      </span>
                    ))}
                  </div>

                  {/* CTA */}
                  <div className="pt-3 sm:pt-4 border-t border-gray-200 border-opacity-50">
                    <span className={`text-xs sm:text-sm font-semibold ${dayInfo.day === 1 || dayInfo.day === 2 || dayInfo.day === 3 || dayInfo.day === 4 ? 'text-purple-600' : 'text-gray-500'} group-hover:text-purple-700 transition-colors`}>
                      {dayInfo.day === 1 ? `ЁЯкФ ${t.exploreDay1}` : dayInfo.day === 2 ? `ЁЯкФ ${t.exploreDay2}` : dayInfo.day === 3 ? `ЁЯкФ ${t.exploreDay3}` : dayInfo.day === 4 ? `ЁЯкФ ${t.exploreDay4}` : `ЁЯФТ ${t.comingSoon}`}
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Spiritual Framework Section */}
          <div className="bg-white rounded-2xl shadow-lg p-4 sm:p-6 lg:p-8 border border-purple-200">
            <h2 className="text-xl sm:text-2xl lg:text-3xl font-bold text-center text-gray-800 mb-6 sm:mb-8">
              ЁЯХЙя╕П {t.spiritualFramework}
            </h2>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8">
              {/* First Trilogy */}
              <div className="text-center">
                <div className="text-3xl sm:text-4xl mb-3 sm:mb-4">ЁЯЧбя╕П</div>
                <h3 className="text-lg sm:text-xl font-bold text-red-600 mb-2 sm:mb-3">{t.days13}</h3>
                <p className="text-sm sm:text-base text-gray-600 mb-2 font-semibold">{t.destructionNegativity}</p>
                <p className="text-xs sm:text-sm text-gray-500">
                  {t.days13Desc}
                </p>
              </div>

              {/* Second Trilogy */}
              <div className="text-center">
                <div className="text-3xl sm:text-4xl mb-3 sm:mb-4">ЁЯТ░</div>
                <h3 className="text-lg sm:text-xl font-bold text-yellow-600 mb-2 sm:mb-3">{t.days46}</h3>
                <p className="text-sm sm:text-base text-gray-600 mb-2 font-semibold">{t.abundanceProsperity}</p>
                <p className="text-xs sm:text-sm text-gray-500">
                  {t.days46Desc}
                </p>
              </div>

              {/* Third Trilogy */}
              <div className="text-center">
                <div className="text-3xl sm:text-4xl mb-3 sm:mb-4">ЁЯУЪ</div>
                <h3 className="text-lg sm:text-xl font-bold text-blue-600 mb-2 sm:mb-3">{t.days79}</h3>
                <p className="text-sm sm:text-base text-gray-600 mb-2 font-semibold">{t.wisdomKnowledge}</p>
                <p className="text-xs sm:text-sm text-gray-500">
                  {t.days79Desc}
                </p>
              </div>
            </div>

            <div className="mt-6 sm:mt-8 p-4 sm:p-6 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl">
              <p className="text-center text-sm sm:text-base text-gray-700 italic">
                "{t.vijayadashami}" ЁЯПЖ
              </p>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}